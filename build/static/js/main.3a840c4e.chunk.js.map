{"version":3,"sources":["Pages/login.js","Components/Tag.js","Pages/events.js","Pages/event.js","Pages/registration.js","Pages/mypage.js","Components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","centering","textAlign","textField","marginLeft","spacing","marginRight","width","title","color","titleContainer","marginTop","buttonContainer","link","textDecoration","ColorButton","withStyles","root","palette","getContrastText","purple","backgroundColor","Button","Login","classes","className","Typography","variant","noValidate","autoComplete","TextField","id","label","margin","type","to","tag","Tag","props","tags","split","Fragment","map","e","i","console","log","Chip","size","key","flexGrow","overflow","padding","paper","maxWidth","wrapper","display","name","time","get_mozaic","AutoGridNoWrap","Paper","Grid","container","wrap","item","xs","zeroMinWidth","noWrap","center","justifyContent","Mypage","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","drawer","toolbar","Divider","List","tab","ListItem","button","CssBaseline","AppBar","position","appBar","Toolbar","IconButton","aria-label","edge","onClick","menuButton","header","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","drawerPaper","ModalProps","keepMounted","smDown","content","exact","path","component","Ragistration","Events","Event","breakpoints","up","flexShrink","mixins","App","NavBar","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3a840c4e.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Typography, TextField, Button } from '@material-ui/core'\nimport { withStyles, makeStyles } from '@material-ui/core/styles'\nimport { purple } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles(theme => ({\n    centering: {\n        textAlign: 'center',\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n    },\n    title: {\n        color: '#eea5f6'\n    },\n    titleContainer: {\n        marginTop: theme.spacing(20)\n    },\n    buttonContainer: {\n        marginTop: theme.spacing(3)\n    },\n    link: {\n        color: \"black\",\n        textDecoration: \"none\",\n    }\n\n}))\n\n\n\nconst ColorButton = withStyles(theme => ({\n    root: {\n        color: theme.palette.getContrastText(purple[500]),\n        backgroundColor: purple[500],\n        '&:hover': {\n            backgroundColor: purple[700],\n        },\n    },\n}))(Button);\n\nconst Login = () => {\n    const classes = useStyles()\n    return (\n        <div>\n\n            <div className={classes.centering}>\n                <div className={classes.titleContainer}>\n                    <Typography variant=\"h3\" className={classes.title}> ログイン </Typography>\n                </div>\n                <form noValidate autoComplete=\"off\">\n                    <TextField\n                        id=\"standard-uncontrolled\"\n                        label=\"学籍番号\"\n                        className={classes.textField}\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        id=\"standard-password-input\"\n                        label=\"Password\"\n                        className={classes.textField}\n                        type=\"password\"\n                        autoComplete=\"current-password\"\n                        margin=\"normal\"\n                    />\n                    <div className={classes.buttonContainer}>\n                        <ColorButton variant=\"contained\" color=\"primary\" className={classes.margin}>\n                            <Link to='/Home' className=\"link\">ログイン</Link>\n                        </ColorButton>\n                    </div>\n                </form>\n                <Link to='/Registration' className=\"link\">\n                    <div className={classes.buttonContainer} >\n                        <Button variant=\"outlined\">\n                            ユーザ登録\n                        </Button>\n                    </div>\n                </Link>\n            </div>\n\n        </div>\n    )\n\n}\n\nexport default Login\n","import React from 'react'\nimport Chip from '@material-ui/core/Chip'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    tag: {\n        margin: theme.spacing(1),\n    }\n}))\n\nconst Tag = (props) => {\n    const tags = props.tag.split(\",\")\n    const classes = useStyles()\n    return (\n        <React.Fragment>\n            {tags.map((e, i) => {\n                console.log(e)\n                return (\n                    <Chip size=\"small\" label={e} className={classes.tag} key={i} />\n                )\n            })}\n        </React.Fragment>\n    )\n}\n\n\nexport default Tag","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Tag from '../Components/Tag'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        overflow: 'hidden',\n        padding: theme.spacing(0, 3),\n    },\n    paper: {\n        maxWidth: 400,\n        margin: theme.spacing(2),\n        padding: theme.spacing(2),\n    },\n    wrapper: {\n        display: 'flex'\n    },\n    link: {\n        color: \"black\",\n        textDecoration: \"none\",\n    }\n}));\n\nconst name = `ブロックチェーンプロジェクト`;\nconst time = '2019/4/23(火)'\nconst get_mozaic = 20\nconst tag = 'IT'\n\nexport default function AutoGridNoWrap() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Link to='/events/1' className={classes.link}>\n                <Paper className={classes.paper}>\n                    <Grid container wrap=\"nowrap\" spacing={2}>\n                        <Grid item xs zeroMinWidth>\n                            <Typography noWrap variant=\"subtitle1\">{name}</Typography>\n                            <div className={classes.wrapper}>\n                                <Typography noWrap variant=\"subtitle1\">{`${time}~`}</Typography>\n                                <Tag tag={tag} />\n                            </div>\n                            <Typography noWrap variant=\"subtitle1\">{`参加モザイク数:${get_mozaic}`}</Typography>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Link>\n        </div>\n    );\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Tag from '../Components/Tag'\n\nconst useStyles = makeStyles(theme => ({\n    center: {\n        textAlign: 'center',\n        marginTop: theme.spacing(5)\n    },\n    wrapper: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n}));\n\nconst name = `ブロックチェーンプロジェクト`;\nconst time = '2019/4/23(火)'\nconst get_mozaic = 20\nconst tag = 'IT'\nconst coach = {\n    \n}\n\n\n\nexport default function AutoGridNoWrap() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <h3 className={classes.center}>{name}</h3>\n            <div className={classes.wrapper}>\n                <Typography noWrap variant=\"subtitle1\">{`${time}~`}</Typography>\n                <Tag tag={tag} />\n            </div>\n        </div>\n    );\n}","import React from 'react'\nimport { Typography, TextField, Button } from '@material-ui/core'\nimport { withStyles, makeStyles } from '@material-ui/core/styles'\nimport { purple } from '@material-ui/core/colors';\nimport { Link } from 'react-router-dom'\n\n\nconst useStyles = makeStyles(theme => ({\n    centering: {\n        textAlign: 'center',\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n    },\n    title: {\n        color: '#eea5f6'\n    },\n    titleContainer: {\n        marginTop: theme.spacing(20)\n    },\n    buttonContainer: {\n        marginTop: theme.spacing(3)\n    },\n    link: {\n        color: \"black\",\n        textDecoration: \"none\",\n    }\n}))\n\n\n\nconst ColorButton = withStyles(theme => ({\n    root: {\n        color: theme.palette.getContrastText(purple[500]),\n        backgroundColor: purple[500],\n        '&:hover': {\n            backgroundColor: purple[700],\n        },\n    },\n}))(Button);\n\nconst Login = () => {\n    const classes = useStyles()\n    return (\n        <div>\n            <div className={classes.centering}>\n                <div className={classes.titleContainer}>\n                    <Typography variant=\"h3\" className={classes.title}> ユーザ登録 </Typography>\n                </div>\n                <form noValidate autoComplete=\"off\">\n                    <TextField\n                        id=\"standard-uncontrolled\"\n                        label=\"学籍番号\"\n                        className={classes.textField}\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        id=\"standard-password-input\"\n                        label=\"Password\"\n                        className={classes.textField}\n                        type=\"password\"\n                        autoComplete=\"current-password\"\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        id=\"standard-email\"\n                        label=\"Mail\"\n                        className={classes.textField}\n                        margin=\"normal\"\n                    />\n                    <div className={classes.buttonContainer}>\n                        <ColorButton variant=\"contained\" color=\"primary\" className={classes.margin}>\n                            <Link to='/Home' className=\"link\">登録</Link>\n                        </ColorButton>\n                    </div>\n                </form>\n            </div>\n\n        </div>\n    )\n\n}\n\nexport default Login\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Typography, TextField, Button } from '@material-ui/core'\nimport { withStyles, makeStyles } from '@material-ui/core/styles'\nimport { purple } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles(theme => ({\n    \n}))\n\n\nconst Mypage = () => {\n\n    return (\n        <h1>This page is my page</h1>\n    )\n\n}\n\nexport default Mypage\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\n\nimport Login from '../Pages/login'\nimport Events from '../Pages/events'\nimport Event from '../Pages/event'\nimport Mypage from '../Pages/mypage'\nimport Ragistration from '../Pages/registration'\n\n\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport AddAlertIcon from '@material-ui/icons/AddAlert';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nconst drawerWidth = 240;\n\nexport default () => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n\n    function handleDrawerToggle() {\n        setMobileOpen(!mobileOpen);\n    }\n\n\n    const drawer = (\n        <div>\n            <div className={classes.toolbar} />\n            <Divider />\n            <List>\n                <Link to=\"mypage\" className={classes.tab}>\n                    <ListItem button>\n                        <AccountCircleIcon />\n                        マイページ\n                    </ListItem>\n                </Link>\n                <Link to=\"events\" className={classes.tab}>\n                    <ListItem button>\n                        <DateRangeIcon />\n                        イベント一覧\n                    </ListItem>\n                </Link>\n                <Link to=\"call\" className={classes.tab}>\n                    <ListItem button>\n                        <AddAlertIcon />\n                        おしらせ\n                    </ListItem>\n                </Link>\n                <Link to=\"setting\" className={classes.tab}>\n                    <ListItem button>\n                        <SettingsIcon />\n                        設定\n                    </ListItem>\n                </Link>\n\n            </List>\n        </div>\n    );\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar position=\"fixed\" className={classes.appBar} color=\"default\">\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"Open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        <div className={classes.header}> Portfolio </div>\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <nav className={classes.drawer} aria-label=\"menu\">\n                <Hidden smUp implementation=\"css\">\n                    <Drawer\n                        variant=\"temporary\"\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                        open={mobileOpen}\n                        onClose={handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true,\n                        }}\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n                <Hidden smDown implementation=\"css\">\n                    <Drawer\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        variant=\"permanent\"\n                        open\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </nav>\n            <main className={classes.content}>\n                <Router>\n                    <Route exact path='/login' component={Login} />\n                    <Route exact path='/registration' component={Ragistration} />\n                    <Route exact path='/events' component={Events} />\n                    <Route exact path='/events/:id' component={Event} />\n                    <Route exact path='/mypage' component={Mypage} />\n                </Router>\n            </main>\n        </div>\n    )\n}\n\n\n// Style\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        marginTop: theme.spacing(5)\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('md')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    tab: {\n        color: \"black\",\n        textDecoration: \"none\",\n    },\n    header: {\n        color: \"#444444\",\n    }\n}));","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Login from './Pages/login'\nimport Events from './Pages/events'\nimport Event from './Pages/event'\nimport Ragistration from './Pages/registration'\nimport NavBar from './Components/NavBar'\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}